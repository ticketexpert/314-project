name: Full-Stack CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: eventuser
          POSTGRES_PASSWORD: eventpass
          POSTGRES_DB: eventdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: npm ci
        working-directory: backend

      - name: Run backend tests
        run: npm test
        working-directory: backend
        env:
          NODE_ENV: test

  frontend:
    name: User CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install user dependencies
        run: npm install
        working-directory: user

      - name: Run frontend lint
        run: npm run lint
        working-directory: user

      - name: Download Code Climate test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > cc-test-reporter
          chmod +x cc-test-reporter
        working-directory: user

      - name: Code Climate before-build (frontend)
        run: ./cc-test-reporter before-build
        working-directory: user

      - name: Run frontend tests
        run: npm run test -- --coverage
        working-directory: user

      - name: Format code coverage (frontend)
        run: ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.json
        working-directory: user
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Code Climate after-build (frontend)
        run: ./cc-test-reporter after-build --exit-code $?
        working-directory: user
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Build React app using Vite
        run: npm run build
        working-directory: user

      - name: Upload production build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: user/dist/

  organiser:
    name: Organiser CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: organiser/package-lock.json

      - name: Install organiser dependencies
        run: npm install --legacy-peer-deps
        working-directory: organiser

      - name: Run organiser lint
        run: npm run lint
        working-directory: organiser

      - name: Run organiser tests
        run: npm run test -- --coverage
        working-directory: organiser

      - name: Build Next.js app
        run: npm run build
        working-directory: organiser

      - name: Upload production build (organiser)
        uses: actions/upload-artifact@v4
        with:
          name: organiser-build
          path: organiser/.next/

  deploy-user:
    name: Deploy User App to GitHub Pages
    needs: frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: user

      - name: Build Vite app
        run: npm run build
        working-directory: user

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: user/dist

  deploy-organiser:
    name: Simulate Organiser Deployment
    needs: organiser
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download organiser build
        uses: actions/download-artifact@v4
        with:
          name: organiser-build
          path: organiser/.next/

      - name: Simulate deployment step
        run: echo "Deploying organiser app..."
