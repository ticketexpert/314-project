name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: eventuser
          POSTGRES_PASSWORD: eventpass
          POSTGRES_DB: eventdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Run linting
        run: npm run lint
        working-directory: backend

      - name: Run tests
        run: npm test
        working-directory: backend
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://eventuser:eventpass@localhost:5432/eventdb

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/

  deploy:
    name: Deploy Backend
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying backend to production..."
          # Add your deployment commands here
          # For example:
          # - SSH into your server
          # - Pull latest changes
          # - Restart services 